{"version":3,"sources":["../../../src/generated/exceptions/InconsistentVersionWarning.ts"],"sourcesContent":["/* eslint-disable */\n/* NOTE: This file is auto-generated. Do not edit it directly. */\n\nimport crypto from 'node:crypto'\n\nimport { PythonBridge, NDArray, ArrayLike, SparseMatrix } from '@/sklearn/types'\n\n/**\n  Warning raised when an estimator is unpickled with a inconsistent version.\n\n  [Python Reference](https://scikit-learn.org/stable/modules/generated/sklearn.exceptions.InconsistentVersionWarning.html)\n */\nexport class InconsistentVersionWarning {\n  id: string\n  opts: any\n\n  _py: PythonBridge\n  _isInitialized: boolean = false\n  _isDisposed: boolean = false\n\n  constructor(opts?: {\n    /**\n      Estimator name.\n     */\n    estimator_name?: string\n\n    /**\n      Current scikit-learn version.\n     */\n    current_sklearn_version?: string\n\n    /**\n      Original scikit-learn version.\n     */\n    original_sklearn_version?: string\n  }) {\n    this.id = `InconsistentVersionWarning${crypto.randomUUID().split('-')[0]}`\n    this.opts = opts || {}\n  }\n\n  get py(): PythonBridge {\n    return this._py\n  }\n\n  set py(pythonBridge: PythonBridge) {\n    this._py = pythonBridge\n  }\n\n  /**\n    Initializes the underlying Python resources.\n\n    This instance is not usable until the `Promise` returned by `init()` resolves.\n   */\n  async init(py: PythonBridge): Promise<void> {\n    if (this._isDisposed) {\n      throw new Error(\n        'This InconsistentVersionWarning instance has already been disposed'\n      )\n    }\n\n    if (this._isInitialized) {\n      return\n    }\n\n    if (!py) {\n      throw new Error(\n        'InconsistentVersionWarning.init requires a PythonBridge instance'\n      )\n    }\n\n    this._py = py\n\n    await this._py.ex`\nimport numpy as np\nfrom sklearn.exceptions import InconsistentVersionWarning\ntry: bridgeInconsistentVersionWarning\nexcept NameError: bridgeInconsistentVersionWarning = {}\n`\n\n    // set up constructor params\n    await this._py.ex`ctor_InconsistentVersionWarning = {'estimator_name': ${\n      this.opts['estimator_name'] ?? undefined\n    }, 'current_sklearn_version': ${\n      this.opts['current_sklearn_version'] ?? undefined\n    }, 'original_sklearn_version': ${\n      this.opts['original_sklearn_version'] ?? undefined\n    }}\n\nctor_InconsistentVersionWarning = {k: v for k, v in ctor_InconsistentVersionWarning.items() if v is not None}`\n\n    await this._py\n      .ex`bridgeInconsistentVersionWarning[${this.id}] = InconsistentVersionWarning(**ctor_InconsistentVersionWarning)`\n\n    this._isInitialized = true\n  }\n\n  /**\n    Disposes of the underlying Python resources.\n\n    Once `dispose()` is called, the instance is no longer usable.\n   */\n  async dispose() {\n    if (this._isDisposed) {\n      return\n    }\n\n    if (!this._isInitialized) {\n      return\n    }\n\n    await this._py.ex`del bridgeInconsistentVersionWarning[${this.id}]`\n\n    this._isDisposed = true\n  }\n\n  /**\n    Exception.with\\_traceback(tb) â€“ set self.\\_\\_traceback\\_\\_ to tb and return self.\n   */\n  async with_traceback(opts: {}): Promise<any> {\n    if (this._isDisposed) {\n      throw new Error(\n        'This InconsistentVersionWarning instance has already been disposed'\n      )\n    }\n\n    if (!this._isInitialized) {\n      throw new Error(\n        'InconsistentVersionWarning must call init() before with_traceback()'\n      )\n    }\n\n    // set up method params\n    await this._py.ex`pms_InconsistentVersionWarning_with_traceback = {}\n\npms_InconsistentVersionWarning_with_traceback = {k: v for k, v in pms_InconsistentVersionWarning_with_traceback.items() if v is not None}`\n\n    // invoke method\n    await this._py\n      .ex`res_InconsistentVersionWarning_with_traceback = bridgeInconsistentVersionWarning[${this.id}].with_traceback(**pms_InconsistentVersionWarning_with_traceback)`\n\n    // convert the result from python to node.js\n    return this\n      ._py`res_InconsistentVersionWarning_with_traceback.tolist() if hasattr(res_InconsistentVersionWarning_with_traceback, 'tolist') else res_InconsistentVersionWarning_with_traceback`\n  }\n\n  get args(): Promise<any> {\n    if (this._isDisposed) {\n      throw new Error(\n        'This InconsistentVersionWarning instance has already been disposed'\n      )\n    }\n\n    if (!this._isInitialized) {\n      throw new Error(\n        'InconsistentVersionWarning must call init() before accessing args'\n      )\n    }\n\n    return (async () => {\n      // invoke accessor\n      await this._py\n        .ex`attr_InconsistentVersionWarning_args = bridgeInconsistentVersionWarning[${this.id}].args`\n\n      // convert the result from python to node.js\n      return this\n        ._py`attr_InconsistentVersionWarning_args.tolist() if hasattr(attr_InconsistentVersionWarning_args, 'tolist') else attr_InconsistentVersionWarning_args`\n    })()\n  }\n}\n"],"mappings":";AAGA,OAAO,YAAY;AASZ,IAAM,6BAAN,MAAiC;AAAA,EAQtC,YAAY,MAeT;AAlBH,0BAA0B;AAC1B,uBAAuB;AAkBrB,SAAK,KAAK,6BAA6B,OAAO,WAAW,EAAE,MAAM,GAAG,EAAE,CAAC;AACvE,SAAK,OAAO,QAAQ,CAAC;AAAA,EACvB;AAAA,EAEA,IAAI,KAAmB;AACrB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,IAAI,GAAG,cAA4B;AACjC,SAAK,MAAM;AAAA,EACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,KAAK,IAAiC;AAC1C,QAAI,KAAK,aAAa;AACpB,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,QAAI,KAAK,gBAAgB;AACvB;AAAA,IACF;AAEA,QAAI,CAAC,IAAI;AACP,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,SAAK,MAAM;AAEX,UAAM,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAQf,UAAM,KAAK,IAAI,0DACb,KAAK,KAAK,gBAAgB,KAAK,sCAE/B,KAAK,KAAK,yBAAyB,KAAK,uCAExC,KAAK,KAAK,0BAA0B,KAAK;AAAA;AAAA;AAK3C,UAAM,KAAK,IACR,sCAAsC,KAAK;AAE9C,SAAK,iBAAiB;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,UAAU;AACd,QAAI,KAAK,aAAa;AACpB;AAAA,IACF;AAEA,QAAI,CAAC,KAAK,gBAAgB;AACxB;AAAA,IACF;AAEA,UAAM,KAAK,IAAI,0CAA0C,KAAK;AAE9D,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,eAAe,MAAwB;AAC3C,QAAI,KAAK,aAAa;AACpB,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,QAAI,CAAC,KAAK,gBAAgB;AACxB,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAGA,UAAM,KAAK,IAAI;AAAA;AAAA;AAKf,UAAM,KAAK,IACR,sFAAsF,KAAK;AAG9F,WAAO,KACJ;AAAA,EACL;AAAA,EAEA,IAAI,OAAqB;AACvB,QAAI,KAAK,aAAa;AACpB,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,QAAI,CAAC,KAAK,gBAAgB;AACxB,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,YAAQ,YAAY;AAElB,YAAM,KAAK,IACR,6EAA6E,KAAK;AAGrF,aAAO,KACJ;AAAA,IACL,GAAG;AAAA,EACL;AACF;","names":[]}